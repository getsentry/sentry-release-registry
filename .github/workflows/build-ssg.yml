name: Generate Static Site

on:
  push:
    branches: [ main, master ]
    paths:
      - 'api-server/**'
      - '.github/workflows/build-ssg.yml'
  pull_request:
    branches: [ main, master ]
    paths:
      - 'api-server/**'
      - '.github/workflows/build-ssg.yml'

jobs:
  generate:
    name: Generate and Upload Static Site
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.22'
        cache-dependency-path: api-server/go.sum
        
    - name: Download dependencies
      working-directory: api-server
      run: |
        go mod download
        go mod verify
        
    - name: Run go mod tidy check
      working-directory: api-server
      run: |
        go mod tidy
        git diff --exit-code -- go.mod go.sum
        
    - name: Build static site generator
      working-directory: api-server
      run: go build -v -o ssg main.go
      
    - name: Generate static site
      working-directory: api-server
      run: |
        echo "Generating static site..."
        time ./ssg build
        
    - name: Verify generated files
      working-directory: api-server
      run: |
        echo "Verifying generated files..."
        ls -la dist/
        
        # Verify key files exist
        test -f dist/packages.json || exit 1
        test -f dist/apps.json || exit 1
        test -f dist/aws-lambda-layers.json || exit 1
        test -f dist/marketing-slugs.json || exit 1
        test -f dist/healthz.json || exit 1
        
        # Verify JSON files are valid
        jq empty dist/packages.json
        jq empty dist/apps.json
        jq empty dist/aws-lambda-layers.json
        jq empty dist/marketing-slugs.json
        jq empty dist/healthz.json
        
        # Check if packages directory has content
        test -d dist/packages || exit 1
        package_count=$(ls dist/packages/ | wc -l)
        echo "Generated $package_count package directories"
        test $package_count -gt 0 || exit 1
        
        # Show generation stats
        echo "=== Generation Summary ==="
        echo "Total files: $(find dist/ -type f | wc -l)"
        echo "Total size: $(du -sh dist/ | cut -f1)"
        echo "Key endpoints:"
        echo "  - $(jq length dist/packages.json) packages"
        echo "  - $(jq length dist/apps.json) apps"
        echo "  - $(jq length dist/aws-lambda-layers.json) lambda layers"
        echo "  - $(jq '.slugs | length' dist/marketing-slugs.json) marketing slugs"
        
    - name: Run code quality checks
      working-directory: api-server
      run: |
        echo "Running go vet..."
        go vet ./...
        
        echo "Checking code formatting..."
        unformatted_files=$(gofmt -l .)
        if [ -n "$unformatted_files" ]; then
          echo "❌ The following files need formatting:"
          echo "$unformatted_files"
          echo ""
          echo "To fix, run: go fmt ./..."
          exit 1
        fi
        echo "✅ All files are properly formatted"
        
    - name: Test basic functionality
      working-directory: api-server
      run: |
        echo "Testing basic functionality..."
        
        # Test build command works
        ./ssg build
        
        # Test server startup (quick test)
        timeout 5s ./ssg &
        SERVER_PID=$!
        sleep 2
        
        # Quick health check
        curl -f http://localhost:8080/healthz || exit 1
        echo "Basic functionality test passed!"
        
        # Clean up
        kill $SERVER_PID || true
        wait $SERVER_PID 2>/dev/null || true
        
    - name: Upload generated static site
      uses: actions/upload-artifact@v4
      with:
        name: static-site
        path: api-server/dist/
        retention-days: 30